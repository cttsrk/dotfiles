" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"                    GENERAL

" Don't care to be compatible with vi circa 1976.
set nocompatible

" Quickly edit and reload this file from anywhere.
cabbrev vconf new ~/.vimrc
cabbrev rev source ~/.vimrc

" Turn off hard and soft line wrap.
set textwidth=0 wrapmargin=0 nowrap

" Rolodex mode, vertical and horizontal
set noequalalways winheight=9999 helpheight=9999
set winwidth=89 winminheight=1 winminwidth=6

" The final tab solution.
set tabstop=4 shiftwidth=4 expandtab autoindent

set fillchars=stl:\ 
set undofile                " Save unlimited per-file undo history in appdata.
set mouse=a                 " Enable the mouse.
set lazyredraw
set noeb vb t_vb=
set laststatus=2 statusline=%f noruler
set hidden
set scrolloff=3
set splitright splitbelow
set foldcolumn=0 " numberwidth=5
set ignorecase smartcase incsearch
set encoding=utf-8
set number

" Enable line numbers for all opened files, even help files.
augroup buffer_switch_settings
    autocmd!
    autocmd BufEnter * :set number
augroup END

" Update the window title when changing vim buffers.
function! UpdateTitle()
  let &titlestring="".fnamemodify(expand("%"),":~")
  set title
endfunction

augroup windowtitle
  autocmd!
  autocmd BufReadPost,FileReadPost,BufNewFile,BufEnter * call UpdateTitle()
augroup END

" Terminal sanity on windows.
if (&term == "pcterm" || &term == "win32")
    set term=xterm t_Co=257
    let &t_AB="\e[48;5;%dm"
    let &t_AF="\e[38;5;%dm"
    set termencoding=utf8
    ino <Char-0x07F> <BS>
    nn <Char-0x07F> <BS>
endif



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"                    KEYBINDS
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" Quick save
nn  <C-s> :w<CR>
ino <C-s> <Esc>:w<CR>a
vno <C-s> <Esc>:w<CR>

" Quick close
nn  <C-q> :q<CR>
ino <C-q> <Esc>:q<CR>
vno <C-q> <Esc>:q<CR>

" Hit space to unhighlight search matches.
nn <Space> :nohlsearch<CR>:<C-c><Space>



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"           COLOR THEME / HIGHLIGHTS
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" Highlight the first 80 columns.
" let &colorcolumn="".join(range(1,80),",")
set colorcolumn=80

" Aliases for some terminal colors.
" let s:white     = "15"
" let s:light     = "7"
" if (&t_Co == "256")
"     let s:grey1     = "249"
"     let s:grey2     = "246"
"     let s:grey3     = "243"
"     let s:grey4     = "240"
"     let s:dark      = "238"
"     let s:black     = "232"
"     let s:orange    = "166"
"     let s:green     = "70"
"     let s:yellow    = "178"
"     let s:blue      = "25"
"     let s:purple    = "98"
"     let s:cyan      = "37"
"     let s:lime      = "76"
"     let s:magenta   = "164"
"     let s:attn_y    = "220"
"     let s:attn_o    = "215"
"     let s:attn_r    = "203"
"     let s:attn_g    = "112"
" else
"     let s:grey1     = "8"
"     let s:grey2     = "8"
"     let s:grey3     = "8"
"     let s:grey4     = "8"
"     let s:dark      = "0"
"     let s:black     = "0"
"     let s:orange    = "1"
"     let s:green     = "2"
"     let s:yellow    = "3"
"     let s:blue      = "4"
"     let s:purple    = "5"
"     let s:cyan      = "6"
"     let s:lime      = "10"
"     let s:magenta   = "13"
"     let s:attn_y    = "11"
"     let s:attn_o    = "11"
"     let s:attn_r    = "9"
"     let s:attn_g    = "10"
" endif

" Build an appropriate highlight command. The "NONE" before the variables
" clears the highlight completely without reverting to default.
function s:hi(group, fg, bg, attr)
    let s:c = "highlight! " .a:group ." NONE"
    if a:fg != ""   | let s:c .= " ctermfg=" .a:fg | endif
    if a:bg != ""   | let s:c .= " ctermbg=" .a:bg | endif
    if a:attr != "" | let s:c .= " cterm=" .a:attr | endif
    exec s:c
endfunction

" for hl_group in getcompletion('', 'highlight')
"    call s:hi(hl_group, "", "", "")
" endfor

syntax enable
syntax reset

" Vim UI highlights      foreground  background  attributes
call s:hi("ColorColumn",      "",         "darkred", "")
" call s:hi("Normal",         s:dark,     s:light,    "")
" call s:hi("Folded",         s:grey1,    "",         "")
" call s:hi("FoldedColumn",   s:grey1,    "",         "")
" call s:hi("LineNr",         s:grey1,    s:white,    "")
" call s:hi("Visual",         s:white,    s:grey1,    "")
" call s:hi("EndOfBuffer",    s:light,    "",         "")
call s:hi("StatusLine",       "black",    "gray",     "")
call s:hi("StatusLineNC",     "black",    "gray",     "")
" call s:hi("VertSplit",      s:light,    "",         "")
" call s:hi("MatchParen",     s:black,    s:attn_y,   "bold")
" call s:hi("Search",         "",         "",         "reverse")
" call s:hi("ErrorMsg",       s:orange,   "",         "reverse")
" call s:hi("Directory",      s:blue,     "",         "")
" call s:hi("MoreMsg",        s:blue,     "",         "")
" call s:hi("Question",       s:blue,     "",         "")
" Syntax highlights      foreground  background  attributes
" call s:hi("Comment",        s:green,    "",         "")
" call s:hi("Constant",       s:green,    "",         "")
" call s:hi("Identifier",     s:dark,     "",         "")
" call s:hi("Statement",      s:orange,   "",         "")
" call s:hi("PreProc",        s:blue,     "",         "")
" call s:hi("Type",           s:dark,     "",         "")
" call s:hi("Special",        s:dark,     "",         "")
" call s:hi("Underlined",     s:magenta,  "",         "")
" call s:hi("Ignore",         s:orange,   "",         "bold,reverse")
" call s:hi("Error",          s:orange,   "",         "bold")
" call s:hi("Todo",           s:orange,   "",         "bold")

delfunction s:hi    " Cleanup.
